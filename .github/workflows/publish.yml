jobs:
  build:
    name: ${{ matrix.os }} w/JDK ${{ matrix.java }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Git checkout
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      if: matrix.os == 'ubuntu-latest'
      name: Cache Gradle
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew jpackage
    - continue-on-error: true
      if: matrix.os == 'ubuntu-latest'
      name: Copy the RPM to the location required to build the ArchLinux package
      run: cp releases/maptool-*.rpm package/archlinux/maptool/maptool.rpm
    - continue-on-error: true
      env:
        MAPTOOL_VERSION: ${{ github.event.release.tag_name }}
      if: matrix.os == 'ubuntu-latest'
      name: Build ArchLinux package
      uses: 2m/arch-pkgbuild-builder@v1.16
      with:
        pkgname: package/archlinux/maptool
        target: pkgbuild
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Build uberJar on Windows
      run: ./gradlew shadowJar
    - continue-on-error: true
      name: List releases
      run: ls releases
    - continue-on-error: true
      if: matrix.os == 'windows-latest'
      name: Copy Windows Release Files
      run: 'cp releases/MapTool*.exe releases/MapTool-${{ github.event.release.tag_name
        }}.exe

        cp releases/MapTool*.msi releases/MapTool-${{ github.event.release.tag_name
        }}.msi

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-exe
      if: matrix.os == 'windows-latest'
      name: Upload Windows EXE Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: MapTool-${{ github.event.release.tag_name }}.exe
        asset_path: releases/MapTool-${{ github.event.release.tag_name }}.exe
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-msi
      if: matrix.os == 'windows-latest'
      name: Upload Windows MSI Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: MapTool-${{ github.event.release.tag_name }}.msi
        asset_path: releases/MapTool-${{ github.event.release.tag_name }}.msi
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-jar
      if: matrix.os == 'windows-latest'
      name: Upload Uber Jar Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: MapTool-${{ github.event.release.tag_name }}.jar
        asset_path: releases/MapTool-${{ github.event.release.tag_name }}.jar
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      if: matrix.os == 'ubuntu-latest'
      name: Copy Linux Release Files
      run: 'cp releases/maptool*.x86_64.rpm releases/maptool-${{ github.event.release.tag_name
        }}.x86_64.rpm

        cp releases/maptool*_amd64.deb releases/maptool_${{ github.event.release.tag_name
        }}_amd64.deb

        cp package/archlinux/maptool/maptool-*-x86_64.pkg.tar.zst releases/maptool-${{
        github.event.release.tag_name }}-x86_64.pkg.tar.zst

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-rpm
      if: matrix.os == 'ubuntu-latest'
      name: Upload Linux RPM Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: maptool-${{ github.event.release.tag_name }}-x86_64.rpm
        asset_path: releases/maptool-${{ github.event.release.tag_name }}.x86_64.rpm
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-deb
      if: matrix.os == 'ubuntu-latest'
      name: Upload Linux DEB Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: maptool_${{ github.event.release.tag_name }}-amd64.deb
        asset_path: releases/maptool_${{ github.event.release.tag_name }}_amd64.deb
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-arch
      if: matrix.os == 'ubuntu-latest'
      name: Upload ArchLinux Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: maptool-${{ github.event.release.tag_name }}-x86_64.pkg.tar.zst
        asset_path: releases/maptool-${{ github.event.release.tag_name }}-x86_64.pkg.tar.zst
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      if: matrix.os == 'macOS-latest'
      name: Copy Mac OS Release Files
      run: 'cp releases/MapTool*.dmg releases/MapTool-${{ github.event.release.tag_name
        }}.dmg

        cp releases/MapTool*.pkg releases/MapTool-${{ github.event.release.tag_name
        }}.pkg

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-dmg
      if: matrix.os == 'macOS-latest'
      name: Upload Mac DMG Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: MapTool-${{ github.event.release.tag_name }}.dmg
        asset_path: releases/MapTool-${{ github.event.release.tag_name }}.dmg
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset-pkg
      if: matrix.os == 'macOS-latest'
      name: Upload Mac PKG Release Asset
      uses: actions/upload-release-asset@v1
      with:
        asset_content_type: application/octet-stream
        asset_name: MapTool-${{ github.event.release.tag_name }}.pkg
        asset_path: releases/MapTool-${{ github.event.release.tag_name }}.pkg
        upload_url: ${{ github.event.release.upload_url }}
    strategy:
      fail-fast: false
      matrix:
        distribution:
        - temurin
        java:
        - '21'
        os:
        - windows-latest
        - ubuntu-latest
        - macOS-latest
name: Publish Assets
on:
  repository_dispatch:
    types: trigger-ga___publish.yml
